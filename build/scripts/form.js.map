{"version":3,"sources":["webpack:///form.js","webpack:///./src/scripts/docs/examples/Checkbox.example.txt","webpack:///./src/scripts/docs/examples/Input.example.txt","webpack:///./src/scripts/docs/examples/MessageBox.example.txt","webpack:///./src/scripts/docs/examples/Radio.example.txt","webpack:///./src/scripts/docs/examples/RhinoSwitch.example.txt","webpack:///./src/scripts/docs/examples/Select.example.txt","webpack:///./src/scripts/docs/examples/Textarea.example.txt","webpack:///./src/scripts/docs/FormApp.jsx"],"names":["webpackJsonp","366","module","exports","379","385","393","394","396","400","790","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_componentPlayground","_componentPlayground2","_components","inputExample","inputDocs","addon","autoCapitalize","autoComplete","clear","explanationMessage","initialValue","label","naked","name","onChange","placeholder","required","type","validationMessage","inputScope","React","ReactDOM","Icon","Input","selectExample","selectDocs","options","onSelect","selected","selectScope","Select","selectOpts","id","value","textareaExample","textareaDocs","abbrMaxCharacters","maxCharacters","textareaScope","Textarea","messageBoxExample","messageBoxDocs","maxHeight","messageBoxScope","MessageBox","checkboxExample","checkboxDocs","inline","isChecked","onClick","checkboxScope","Checkbox","radioExample","radioDocs","selectedValue","radioScope","RadioGroup","Radio","switchExample","switchDocs","className","disabled","switchScope","RhinoSwitch","FormApp","createElement","htmlFor","Button","icon","href","docClass","propDescriptionMap","codeText","scope","noRender","target","render","document","getElementById"],"mappings":"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","file":"form.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 366:\n/***/ (function(module, exports) {\n\nmodule.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-checkbox\\\">\\n        <div className=\\\"form__group\\\">\\n          <label htmlFor=\\\"\\\" className=\\\"u-block\\\">Checkboxes</label>\\n          <Checkbox name=\\\"exampleCheckbox31\\\">Checkbox One</Checkbox>\\n          <Checkbox name=\\\"exampleCheckbox32\\\">Checkbox Two</Checkbox>\\n          <Checkbox name=\\\"exampleCheckbox33\\\">Checkbox Three</Checkbox>\\n        </div>\\n        <div className=\\\"form__group\\\">\\n          <label htmlFor=\\\"\\\" className=\\\"u-block\\\">Checkboxes Inline</label>\\n          <Checkbox inline name=\\\"exampleCheckbox311\\\">Checkbox One</Checkbox>\\n          <Checkbox inline name=\\\"exampleCheckbox321\\\">Checkbox Two</Checkbox>\\n          <Checkbox inline name=\\\"exampleCheckbox331\\\">Checkbox Three</Checkbox>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 379:\n/***/ (function(module, exports) {\n\nmodule.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-inputs\\\">\\n        <Input name=\\\"exampleInputFirstName31\\\" label=\\\"First Name\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" required />\\n        <Input name=\\\"exampleInputLastName31\\\" label=\\\"Last Name\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" required />\\n        <Input name=\\\"exampleInputPassword31\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" />\\n        <Input addon=\\\"both\\\" type=\\\"text\\\" placeholder=\\\"Lorem ipsum dolor sit\\\">\\n          <span>Amount $</span>\\n          <span>.00</span>\\n        </Input>\\n        <Input name=\\\"exampleInputText0202\\\" label=\\\"Clear Input\\\" type=\\\"text\\\" clear />\\n        <Input name=\\\"exampleInputText022\\\" label=\\\"Autocomplete off\\\" autoComplete=\\\"off\\\" type=\\\"text\\\" />\\n        <Input name=\\\"exampleInputText022\\\" label=\\\"Autocapitalize off\\\" autoCapitalize=\\\"none\\\" type=\\\"text\\\" />\\n        <Input name=\\\"exampleInputText002\\\" placeholder=\\\"Naked Input\\\" type=\\\"text\\\" naked />\\n        <Input name=\\\"exampleInputValidation\\\" label=\\\"Validation Message\\\" initialValue=\\\"bademail.com\\\" type=\\\"email\\\" validationMessage=\\\"This is not a valid email address.\\\" />\\n        <Input name=\\\"exampleInputExplanation\\\" label=\\\"Explanation Message\\\" initialValue=\\\"Lorem ipsum dolor\\\" type=\\\"text\\\" explanationMessage=\\\"This is an explanation message to help user.\\\" />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 385:\n/***/ (function(module, exports) {\n\nmodule.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-messageBox\\\">\\n        <MessageBox label=\\\"Bio\\\" name=\\\"biography\\\" rows={1} placeholder=\\\"I like messages!\\\" />\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 393:\n/***/ (function(module, exports) {\n\nmodule.exports = \"class ComponentExample extends React.Component {\\n  optionalCallbackFunction = (value) => {\\n     console.log('Run optional callback function', value);\\n   };\\n\\n  render() {\\n    return (\\n      <div className=\\\"site-example-radio\\\">\\n        <RadioGroup name=\\\"exampleRadio4\\\" label=\\\"Radios\\\" onChange={this.optionalCallbackFunction} selectedValue=\\\"3\\\">\\n          <Radio value=\\\"1\\\">Radio One</Radio>\\n          <Radio value=\\\"2\\\">Radio Two</Radio>\\n          <Radio value=\\\"3\\\">Radio Three</Radio>\\n        </RadioGroup>\\n        <RadioGroup inline name=\\\"exampleRadio44\\\" label=\\\"Radios Inline\\\" onChange={this.optionalCallbackFunction} selectedValue=\\\"3\\\">\\n          <Radio value=\\\"1\\\">Radio One</Radio>\\n          <Radio value=\\\"2\\\">Radio Two</Radio>\\n          <Radio value=\\\"3\\\">Radio Three</Radio>\\n        </RadioGroup>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 394:\n/***/ (function(module, exports) {\n\nmodule.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-switch\\\">\\n        <div className=\\\"form__group\\\">\\n          <label htmlFor=\\\"\\\" className=\\\"u-block\\\">Switcher</label>\\n          <RhinoSwitch name=\\\"exampleSwitch4\\\" />\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 396:\n/***/ (function(module, exports) {\n\nmodule.exports = \"var selectOpts = [\\n  { id: 1, value: 'Option One' },\\n  { id: 2, value: 'Option Two' },\\n  { id: 3, value: 'Option Three' },\\n  { id: 4, value: 'Option Four' },\\n];\\n\\nclass ComponentExample extends React.Component {\\n  handleSelect = (name, value) => {\\n    const newState = {};\\n\\n    newState[name] = value;\\n\\n    console.log(newState);\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"site-example-selects\\\">\\n        <Select onSelect={this.handleSelect} selected={1} name=\\\"mySelect\\\" label=\\\"Choose One\\\" options={selectOpts} />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 400:\n/***/ (function(module, exports) {\n\nmodule.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-textareas\\\">\\n        <Textarea label=\\\"Text Area\\\" name=\\\"exampleTextArea\\\" rows={3} placeholder=\\\"I like pizza!\\\" />\\n        <Textarea label=\\\"Text Area with Explanation Message\\\" name=\\\"exampleExplanationTextArea\\\" rows={3} placeholder=\\\"Text area with explanation message\\\" explanationMessage=\\\"This is an explanation message to help the user.\\\" />\\n        <Textarea label=\\\"Text Area with Validation Message\\\" name=\\\"exampleValidationTextArea\\\" rows={3} placeholder=\\\"Text area with validation message\\\" validationMessage=\\\"This is a validation message to help the user.\\\" />\\n        <Textarea label=\\\"Text Area with Character Count\\\" name=\\\"exampleCharacterCount\\\" rows={3} placeholder=\\\"Text area with character count\\\" maxCharacters={130} />\\n        <Textarea label=\\\"Text Area with Character Count and Explanation\\\" name=\\\"exampleExplanationPlusCharacterCount\\\" rows={3} initialValue=\\\"Nulla ipsum metus, pellentesque eget pulvinar ac, cursus et enim. Nam laoreet mattis odio, vel efficitur nisi laoreet pellen..\\\" placeholder=\\\"Text area with character count and explanation message\\\" maxCharacters={130} explanationMessage=\\\"This is an explanation message to help the user.\\\" />\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n/***/ }),\n\n/***/ 790:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _react = __webpack_require__(0);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(4);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _componentPlayground = __webpack_require__(6);\n\nvar _componentPlayground2 = _interopRequireDefault(_componentPlayground);\n\nvar _components = __webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint import/no-unresolved:0 */\nvar inputExample = __webpack_require__(379);\n\nvar inputDocs = {\n  addon: '[Optional] - Display an add-on on the input, as a string - [left | right | both]',\n  autoCapitalize: '[Optional] - Adjust the capitalization settings of an input - [none | sentences | words | characters]',\n  autoComplete: '[Optional] - Adjust the completion settings on an input - [off | on]',\n  clear: '[Optional] - Form control gets a clear value button',\n  explanationMessage: '[Optional] - Explanation message to help user',\n  initialValue: '[Optional] - Any initial value for the input',\n  label: '[Optional] - A label for the input',\n  naked: '[Optional] - Form control is stripped down in appearance',\n  name: '[Optional] - An id for the label and the input, use if you want clicking the label to activate the input',\n  onChange: '[Optional] - A callback function that is executed when the input value changes',\n  placeholder: '[Optional] - Any placeholder text you want in the input',\n  required: '[Optional] - Field is required and asterisk is added to label',\n  type: '[Optional] - As a string, what type of input you are creating - [email | password | number | search | tel] - defaults to text',\n  validationMessage: '[Optional] - Validation message for errors'\n};\nvar inputScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  Icon: _components.Icon,\n  Input: _components.Input\n};\n\nvar selectExample = __webpack_require__(396);\n\nvar selectDocs = {\n  label: '[Optional] - A label for the select',\n  name: '[Optional] - An id for the label and the select, use if you want clicking the label to activate the select',\n  options: '[Required] - Array of objects that contain the values and text for the options, with an optional selected key, { id: number, value: string }',\n  required: '[Optional] - Field is required and asterisk is added to label',\n  onSelect: '[Optional] - Function that returns the name of the Select and the value that was selected',\n  selected: '[Optional] - String that pre-selects an option'\n};\n\nvar selectScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  Select: _components.Select\n};\n\nvar selectOpts = [{ id: 0, value: '--' }, { id: 1, value: 'Option One' }, { id: 2, value: 'Option Two' }, { id: 3, value: 'Option Three' }, { id: 4, value: 'Option Four' }];\n\nvar textareaExample = __webpack_require__(400);\n\nvar textareaDocs = {\n  abbrMaxCharacters: '[Optional] - Abbreviated max character count - only the count is displayed',\n  explanationMessage: '[Optional] - Explanation message to help user',\n  initialValue: '[Optional] - Any initial value for the textarea',\n  label: '[Optional] - A label for the textarea',\n  maxCharacters: '[Optional] - Set a maximum character limit in order to display character count',\n  name: '[Optional] - An id for the label and the textarea, use if you want clicking the label to activate the textarea',\n  onChange: '[Optional] - A callback function that is executed when the textarea value changes',\n  placeholder: '[Optional] - Any placeholder text you want in the textarea',\n  required: '[Optional] - Field is required and asterisk is added to label',\n  validationMessage: '[Optional] - Validation message for errors'\n};\nvar textareaScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  Textarea: _components.Textarea\n};\n\nvar messageBoxExample = __webpack_require__(385);\n\nvar messageBoxDocs = {\n  label: '[Optional] - A label for the textarea',\n  name: '[Optional] - An id for the label and the textarea, use if you want clicking the label to activate the Message Box',\n  placeholder: '[Optional] - Any placeholder text you want in the textarea',\n  initialValue: '[Optional] - Any initial value for the textarea',\n  maxHeight: '[Optional] - Controls the max-height (default: 20rem)',\n  required: '[Optional] - Field is required and asterisk is added to label'\n};\nvar messageBoxScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  MessageBox: _components.MessageBox\n};\n\nvar checkboxExample = __webpack_require__(366);\n\nvar checkboxDocs = {\n  inline: '[Optional] - Inline the checkboxes',\n  isChecked: '[Optional] - Set initial checked state',\n  name: '[Required] - An id, and label for the checkbox',\n  onClick: '[Optional] - A function you want to trigger when the checkbox is toggled'\n};\nvar checkboxScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  Checkbox: _components.Checkbox\n};\n\nvar radioExample = __webpack_require__(393);\n\nvar radioDocs = {\n  inline: '[Optional] - Inline the radios',\n  name: '[Optional] - The name, and the basis of the id for the radio',\n  onChange: '[Optional] - A function you which to trigger when you change the selection',\n  selectedValue: '[Optional] - The radio you want selected, when used in a group',\n  value: '[Optional] - A value for the radio'\n};\nvar radioScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  RadioGroup: _components.RadioGroup,\n  Radio: _components.Radio\n};\n\nvar switchExample = __webpack_require__(394);\n\nvar switchDocs = {\n  className: '[Optional] - Any class name you would like to add to the switch',\n  disabled: '[Optional] - Disable the switch',\n  isChecked: '[Optional] - Set initial on/off state',\n  name: '[Optional] - The name, and the basis of the id for the switch'\n};\n\nvar switchScope = {\n  React: _react2.default,\n  ReactDOM: _reactDom2.default,\n  RhinoSwitch: _components.RhinoSwitch\n};\n\nvar FormApp = function FormApp() {\n  return _react2.default.createElement(\n    'div',\n    null,\n    _react2.default.createElement(\n      'h1',\n      { className: 'site-headline' },\n      'Forms'\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Forms'\n      ),\n      _react2.default.createElement(\n        'p',\n        { className: 'site-text-lead' },\n        'Forms are assembled using our suite of custom form components. It is important to understand that form components have a ',\n        _react2.default.createElement(\n          'code',\n          null,\n          'form__control'\n        ),\n        ' class for consistent appearance. Form components are also wrapped in a ',\n        _react2.default.createElement(\n          'code',\n          null,\n          'form__group'\n        ),\n        ' class which provides vertical spacing. Finally, you may use the ',\n        _react2.default.createElement(\n          'code',\n          null,\n          'form__section'\n        ),\n        ' class to provide vertical spacing between sections of a form.'\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Form Example'\n      ),\n      _react2.default.createElement(\n        'form',\n        { className: 'form' },\n        _react2.default.createElement(_components.Input, { name: 'exampleInputEmail1', label: 'Email Address', placeholder: 'Email', type: 'email', required: true }),\n        _react2.default.createElement(_components.Input, { name: 'exampleInputPassword1', label: 'Password', placeholder: 'Password', type: 'password', required: true }),\n        _react2.default.createElement(_components.Select, { name: 'exampleSelect1', label: 'Select', options: selectOpts, required: true }),\n        _react2.default.createElement(_components.Textarea, { label: 'Text Area', name: 'exampleTextarea1', placeholder: 'Enter some text', required: true }),\n        _react2.default.createElement(_components.MessageBox, { label: 'Message Box', placeholder: 'Enter some text', name: 'exampleMessageBoxarea1', required: true }),\n        _react2.default.createElement(\n          'div',\n          { className: 'form__group' },\n          _react2.default.createElement(\n            'label',\n            { htmlFor: 'checkboxes', className: 'u-block' },\n            'Checkboxes'\n          ),\n          _react2.default.createElement(\n            _components.Checkbox,\n            { inline: true, name: 'exampleCheckbox1' },\n            'Checkbox One'\n          ),\n          _react2.default.createElement(\n            _components.Checkbox,\n            { inline: true, name: 'exampleCheckbox2' },\n            'Checkbox Two'\n          ),\n          _react2.default.createElement(\n            _components.Checkbox,\n            { inline: true, name: 'exampleCheckbox3' },\n            'Checkbox Three'\n          )\n        ),\n        _react2.default.createElement(\n          _components.RadioGroup,\n          { inline: true, name: 'exampleRadio1', label: 'Radios', selectedValue: '2' },\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '1' },\n            'Radio One'\n          ),\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '2' },\n            'Radio Two'\n          ),\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '3' },\n            'Radio Three'\n          )\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'form__group' },\n          _react2.default.createElement(\n            'label',\n            { htmlFor: 'switcher', className: 'u-block' },\n            'Switcher'\n          ),\n          _react2.default.createElement(_components.RhinoSwitch, { name: 'exampleSwitch1' })\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'u-text-right' },\n          _react2.default.createElement(\n            _components.Button,\n            { type: 'primary' },\n            'Submit Form'\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Form Utilities'\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Inline Form'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'site-copy' },\n          'Wrap elements you want inlined with ',\n          _react2.default.createElement(\n            'code',\n            null,\n            'form__inline'\n          ),\n          ' class.'\n        ),\n        _react2.default.createElement(\n          'form',\n          { className: 'form' },\n          _react2.default.createElement(\n            'div',\n            { className: 'form__inline' },\n            _react2.default.createElement(_components.Input, { name: 'exampleEmail2', label: 'Email Address', placeholder: 'Enter email', type: 'email' }),\n            _react2.default.createElement(_components.Input, { name: 'examplePassword2', label: 'Password', placeholder: 'Password', type: 'password' }),\n            _react2.default.createElement(\n              _components.Button,\n              { type: 'primary' },\n              'Sign In'\n            )\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Input'\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Common Input'\n        ),\n        _react2.default.createElement(_components.Input, { name: 'exampleInputEmail31', label: 'Email Address', type: 'email', required: true }),\n        _react2.default.createElement(_components.Input, { name: 'exampleInputName31', label: 'First Name', placeholder: 'First Name', type: 'text', initialValue: 'Ian' }),\n        _react2.default.createElement(_components.Input, { name: 'exampleInputPassword31', label: 'Password', placeholder: 'Password', type: 'password' })\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Input Add-On'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'site-copy' },\n          _react2.default.createElement(\n            'p',\n            null,\n            'Use the ',\n            _react2.default.createElement(\n              'code',\n              null,\n              'addon'\n            ),\n            ' property on Inputs with add-ons. Pass the addons as renderable nodes.'\n          )\n        ),\n        _react2.default.createElement(\n          _components.Input,\n          { addon: 'left', type: 'text', placeholder: 'Encrypted' },\n          _react2.default.createElement(_components.Icon, { icon: 'lock' })\n        ),\n        _react2.default.createElement(\n          _components.Input,\n          { addon: 'left', type: 'text', placeholder: 'Search' },\n          _react2.default.createElement(_components.Icon, { icon: 'search' })\n        ),\n        _react2.default.createElement(\n          _components.Input,\n          { addon: 'right', type: 'text' },\n          _react2.default.createElement(\n            'a',\n            { href: 'javascript:void(0)' },\n            'Go For It!'\n          )\n        ),\n        _react2.default.createElement(\n          _components.Input,\n          { addon: 'both', type: 'text', placeholder: 'Lorem ipsum dolor sit' },\n          _react2.default.createElement(\n            'span',\n            null,\n            'Amount $'\n          ),\n          _react2.default.createElement(\n            'span',\n            null,\n            '.00'\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Clear Input'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'site-copy' },\n          _react2.default.createElement(\n            'p',\n            null,\n            'Use the ',\n            _react2.default.createElement(\n              'code',\n              null,\n              'clear'\n            ),\n            ' property on Inputs to include a clear value button.'\n          )\n        ),\n        _react2.default.createElement(_components.Input, { name: 'exampleInputText111', label: 'Clear Input', type: 'text', clear: true })\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Naked Input'\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'site-copy' },\n          _react2.default.createElement(\n            'p',\n            null,\n            'Use the ',\n            _react2.default.createElement(\n              'code',\n              null,\n              'naked'\n            ),\n            ' property on Inputs to strip it of background, border, height, and padding.'\n          )\n        ),\n        _react2.default.createElement(_components.Input, { name: 'exampleInputText999', placeholder: 'Naked Input', type: 'text', naked: true })\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Input Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.Input, propDescriptionMap: inputDocs, codeText: inputExample, scope: inputScope, noRender: false })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Text Area'\n      ),\n      _react2.default.createElement(_components.Textarea, { label: 'Text Area', name: 'exampleTextarea2', placeholder: 'Enter some text' })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Text Area Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.Textarea, propDescriptionMap: textareaDocs, codeText: textareaExample, scope: textareaScope, noRender: false })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Message Box '\n      ),\n      _react2.default.createElement(\n        'p',\n        { className: 'site-copy' },\n        'We are using a light-weight plugin, ',\n        _react2.default.createElement(\n          'a',\n          { href: 'http://www.jacklmoore.com/autosize/', target: '_blank' },\n          'Jack Moore\\'s Autosize'\n        ),\n        ', with custom styling for the autogrow functionality.'\n      ),\n      _react2.default.createElement(_components.MessageBox, { label: 'Message Box', name: 'exampleMessageBoxarea2', placeholder: 'Enter some text' })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Message Box Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.MessageBox, propDescriptionMap: messageBoxDocs, codeText: messageBoxExample, scope: messageBoxScope, noRender: false })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Checkbox'\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Rhinobox'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'site-copy' },\n          'Our custom checkbox element is called ',\n          _react2.default.createElement(\n            'code',\n            null,\n            'rhinobox'\n          ),\n          '. By default, these are stacked.'\n        ),\n        _react2.default.createElement(\n          _components.Checkbox,\n          { isChecked: true, name: 'exampleCheckbox11' },\n          'Checkbox One'\n        ),\n        _react2.default.createElement(\n          _components.Checkbox,\n          { name: 'exampleCheckbox12' },\n          'Checkbox Two'\n        ),\n        _react2.default.createElement(\n          _components.Checkbox,\n          { name: 'exampleCheckbox13' },\n          'Checkbox Three'\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Inline Rhinobox'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'site-copy' },\n          'Add the ',\n          _react2.default.createElement(\n            'code',\n            null,\n            'inline'\n          ),\n          ' modifier to create inline checkboxes.'\n        ),\n        _react2.default.createElement(\n          _components.Checkbox,\n          { inline: true, name: 'exampleCheckbox21' },\n          'Checkbox One'\n        ),\n        _react2.default.createElement(\n          _components.Checkbox,\n          { inline: true, isChecked: true, name: 'exampleCheckbox22' },\n          'Checkbox Two'\n        ),\n        _react2.default.createElement(\n          _components.Checkbox,\n          { inline: true, isChecked: true, name: 'exampleCheckbox23' },\n          'Checkbox Three'\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Checkbox Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.Checkbox, propDescriptionMap: checkboxDocs, codeText: checkboxExample, scope: checkboxScope, noRender: false })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Radio'\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Rhinodio'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'site-copy' },\n          'Our custom radio element is called ',\n          _react2.default.createElement(\n            'code',\n            null,\n            'rhinodio'\n          ),\n          '. By default, these are stacked.'\n        ),\n        _react2.default.createElement(\n          _components.RadioGroup,\n          { name: 'exampleRadio2', label: 'Radios', selectedValue: '2' },\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '1' },\n            'Radio One'\n          ),\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '2' },\n            'Radio Two'\n          ),\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '3' },\n            'Radio Three'\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'u-m-b-md' },\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Inline Rhinodio'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'site-copy' },\n          'Add the ',\n          _react2.default.createElement(\n            'code',\n            null,\n            'inline'\n          ),\n          ' property to create inline radios.'\n        ),\n        _react2.default.createElement(\n          _components.RadioGroup,\n          { inline: true, name: 'exampleRadio3', label: 'Radios', selectedValue: '2' },\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '1' },\n            'Radio One'\n          ),\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '2' },\n            'Radio Two'\n          ),\n          _react2.default.createElement(\n            _components.Radio,\n            { value: '3' },\n            'Radio Three'\n          )\n        )\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Radio Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.Radio, propDescriptionMap: radioDocs, codeText: radioExample, scope: radioScope, noRender: false })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Select'\n      ),\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          'h5',\n          { className: 'site-miniheadline' },\n          'Rhinoselect'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'site-copy' },\n          'Our custom select element is called ',\n          _react2.default.createElement(\n            'strong',\n            null,\n            'rhinoselect'\n          ),\n          '.'\n        ),\n        _react2.default.createElement(_components.Select, { name: 'exampleSelect2', label: 'Select', options: selectOpts })\n      )\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Select Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.Select, propDescriptionMap: selectDocs, codeText: selectExample, scope: selectScope, noRender: false })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Switcher'\n      ),\n      _react2.default.createElement(\n        'h5',\n        { className: 'site-miniheadline' },\n        'Rhinoswitcher'\n      ),\n      _react2.default.createElement(\n        'p',\n        { className: 'site-copy' },\n        'Our custom switcher element is called ',\n        _react2.default.createElement(\n          'code',\n          null,\n          'rhinoswitcher'\n        ),\n        '. Disable the switcher using the ',\n        _react2.default.createElement(\n          'code',\n          null,\n          'disabled'\n        ),\n        ' property.'\n      ),\n      _react2.default.createElement(_components.RhinoSwitch, { name: 'rhinoswitch2', className: 'u-m-r-sm', isChecked: true }),\n      _react2.default.createElement(_components.RhinoSwitch, { name: 'rhinoswitch3', isChecked: true, disabled: true })\n    ),\n    _react2.default.createElement(\n      'section',\n      { className: 'site-section' },\n      _react2.default.createElement(\n        'h3',\n        { className: 'site-subheadline' },\n        'Switcher Playground'\n      ),\n      _react2.default.createElement(_componentPlayground2.default, { docClass: _components.RhinoSwitch, propDescriptionMap: switchDocs, codeText: switchExample, scope: switchScope, noRender: false })\n    )\n  );\n};\n\n_reactDom2.default.render(_react2.default.createElement(FormApp, null), document.getElementById('js-app'));\n\n/***/ })\n\n},[790]);\n\n\n// WEBPACK FOOTER //\n// form.js","module.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-checkbox\\\">\\n        <div className=\\\"form__group\\\">\\n          <label htmlFor=\\\"\\\" className=\\\"u-block\\\">Checkboxes</label>\\n          <Checkbox name=\\\"exampleCheckbox31\\\">Checkbox One</Checkbox>\\n          <Checkbox name=\\\"exampleCheckbox32\\\">Checkbox Two</Checkbox>\\n          <Checkbox name=\\\"exampleCheckbox33\\\">Checkbox Three</Checkbox>\\n        </div>\\n        <div className=\\\"form__group\\\">\\n          <label htmlFor=\\\"\\\" className=\\\"u-block\\\">Checkboxes Inline</label>\\n          <Checkbox inline name=\\\"exampleCheckbox311\\\">Checkbox One</Checkbox>\\n          <Checkbox inline name=\\\"exampleCheckbox321\\\">Checkbox Two</Checkbox>\\n          <Checkbox inline name=\\\"exampleCheckbox331\\\">Checkbox Three</Checkbox>\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/Checkbox.example.txt\n// module id = 366\n// module chunks = 0","module.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-inputs\\\">\\n        <Input name=\\\"exampleInputFirstName31\\\" label=\\\"First Name\\\" placeholder=\\\"First Name\\\" type=\\\"text\\\" required />\\n        <Input name=\\\"exampleInputLastName31\\\" label=\\\"Last Name\\\" placeholder=\\\"Last Name\\\" type=\\\"text\\\" required />\\n        <Input name=\\\"exampleInputPassword31\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" />\\n        <Input addon=\\\"both\\\" type=\\\"text\\\" placeholder=\\\"Lorem ipsum dolor sit\\\">\\n          <span>Amount $</span>\\n          <span>.00</span>\\n        </Input>\\n        <Input name=\\\"exampleInputText0202\\\" label=\\\"Clear Input\\\" type=\\\"text\\\" clear />\\n        <Input name=\\\"exampleInputText022\\\" label=\\\"Autocomplete off\\\" autoComplete=\\\"off\\\" type=\\\"text\\\" />\\n        <Input name=\\\"exampleInputText022\\\" label=\\\"Autocapitalize off\\\" autoCapitalize=\\\"none\\\" type=\\\"text\\\" />\\n        <Input name=\\\"exampleInputText002\\\" placeholder=\\\"Naked Input\\\" type=\\\"text\\\" naked />\\n        <Input name=\\\"exampleInputValidation\\\" label=\\\"Validation Message\\\" initialValue=\\\"bademail.com\\\" type=\\\"email\\\" validationMessage=\\\"This is not a valid email address.\\\" />\\n        <Input name=\\\"exampleInputExplanation\\\" label=\\\"Explanation Message\\\" initialValue=\\\"Lorem ipsum dolor\\\" type=\\\"text\\\" explanationMessage=\\\"This is an explanation message to help user.\\\" />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/Input.example.txt\n// module id = 379\n// module chunks = 0","module.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-messageBox\\\">\\n        <MessageBox label=\\\"Bio\\\" name=\\\"biography\\\" rows={1} placeholder=\\\"I like messages!\\\" />\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/MessageBox.example.txt\n// module id = 385\n// module chunks = 0","module.exports = \"class ComponentExample extends React.Component {\\n  optionalCallbackFunction = (value) => {\\n     console.log('Run optional callback function', value);\\n   };\\n\\n  render() {\\n    return (\\n      <div className=\\\"site-example-radio\\\">\\n        <RadioGroup name=\\\"exampleRadio4\\\" label=\\\"Radios\\\" onChange={this.optionalCallbackFunction} selectedValue=\\\"3\\\">\\n          <Radio value=\\\"1\\\">Radio One</Radio>\\n          <Radio value=\\\"2\\\">Radio Two</Radio>\\n          <Radio value=\\\"3\\\">Radio Three</Radio>\\n        </RadioGroup>\\n        <RadioGroup inline name=\\\"exampleRadio44\\\" label=\\\"Radios Inline\\\" onChange={this.optionalCallbackFunction} selectedValue=\\\"3\\\">\\n          <Radio value=\\\"1\\\">Radio One</Radio>\\n          <Radio value=\\\"2\\\">Radio Two</Radio>\\n          <Radio value=\\\"3\\\">Radio Three</Radio>\\n        </RadioGroup>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/Radio.example.txt\n// module id = 393\n// module chunks = 0","module.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-switch\\\">\\n        <div className=\\\"form__group\\\">\\n          <label htmlFor=\\\"\\\" className=\\\"u-block\\\">Switcher</label>\\n          <RhinoSwitch name=\\\"exampleSwitch4\\\" />\\n        </div>\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/RhinoSwitch.example.txt\n// module id = 394\n// module chunks = 0","module.exports = \"var selectOpts = [\\n  { id: 1, value: 'Option One' },\\n  { id: 2, value: 'Option Two' },\\n  { id: 3, value: 'Option Three' },\\n  { id: 4, value: 'Option Four' },\\n];\\n\\nclass ComponentExample extends React.Component {\\n  handleSelect = (name, value) => {\\n    const newState = {};\\n\\n    newState[name] = value;\\n\\n    console.log(newState);\\n  }\\n\\n  render() {\\n    return (\\n      <div className=\\\"site-example-selects\\\">\\n        <Select onSelect={this.handleSelect} selected={1} name=\\\"mySelect\\\" label=\\\"Choose One\\\" options={selectOpts} />\\n      </div>\\n    );\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/Select.example.txt\n// module id = 396\n// module chunks = 0","module.exports = \"class ComponentExample extends React.Component {\\n  render() {\\n    return (\\n      <div className=\\\"site-example-textareas\\\">\\n        <Textarea label=\\\"Text Area\\\" name=\\\"exampleTextArea\\\" rows={3} placeholder=\\\"I like pizza!\\\" />\\n        <Textarea label=\\\"Text Area with Explanation Message\\\" name=\\\"exampleExplanationTextArea\\\" rows={3} placeholder=\\\"Text area with explanation message\\\" explanationMessage=\\\"This is an explanation message to help the user.\\\" />\\n        <Textarea label=\\\"Text Area with Validation Message\\\" name=\\\"exampleValidationTextArea\\\" rows={3} placeholder=\\\"Text area with validation message\\\" validationMessage=\\\"This is a validation message to help the user.\\\" />\\n        <Textarea label=\\\"Text Area with Character Count\\\" name=\\\"exampleCharacterCount\\\" rows={3} placeholder=\\\"Text area with character count\\\" maxCharacters={130} />\\n        <Textarea label=\\\"Text Area with Character Count and Explanation\\\" name=\\\"exampleExplanationPlusCharacterCount\\\" rows={3} initialValue=\\\"Nulla ipsum metus, pellentesque eget pulvinar ac, cursus et enim. Nam laoreet mattis odio, vel efficitur nisi laoreet pellen..\\\" placeholder=\\\"Text area with character count and explanation message\\\" maxCharacters={130} explanationMessage=\\\"This is an explanation message to help the user.\\\" />\\n      </div>\\n    )\\n  }\\n}\\n\\nReactDOM.render(<ComponentExample />, mountNode);\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./src/scripts/docs/examples/Textarea.example.txt\n// module id = 400\n// module chunks = 0","import React    from 'react';\nimport ReactDOM from 'react-dom';\nimport Playground from 'component-playground';\n\nimport { MessageBox, Button, Checkbox, Icon, Input, Radio, RadioGroup, RhinoSwitch, Select, Textarea } from '../components';\n\n/* eslint import/no-unresolved:0 */\nconst inputExample = require('raw-loader!./examples/Input.example.txt');\n\nconst inputDocs  = {\n  addon:              '[Optional] - Display an add-on on the input, as a string - [left | right | both]',\n  autoCapitalize:     '[Optional] - Adjust the capitalization settings of an input - [none | sentences | words | characters]',\n  autoComplete:       '[Optional] - Adjust the completion settings on an input - [off | on]',\n  clear:              '[Optional] - Form control gets a clear value button',\n  explanationMessage: '[Optional] - Explanation message to help user',\n  initialValue:       '[Optional] - Any initial value for the input',\n  label:              '[Optional] - A label for the input',\n  naked:              '[Optional] - Form control is stripped down in appearance',\n  name:               '[Optional] - An id for the label and the input, use if you want clicking the label to activate the input',\n  onChange:           '[Optional] - A callback function that is executed when the input value changes',\n  placeholder:        '[Optional] - Any placeholder text you want in the input',\n  required:           '[Optional] - Field is required and asterisk is added to label',\n  type:               '[Optional] - As a string, what type of input you are creating - [email | password | number | search | tel] - defaults to text',\n  validationMessage:  '[Optional] - Validation message for errors',\n};\nconst inputScope = {\n  React,\n  ReactDOM,\n  Icon,\n  Input,\n};\n\nconst selectExample = require('raw-loader!./examples/Select.example.txt');\n\nconst selectDocs  = {\n  label:   '[Optional] - A label for the select',\n  name:    '[Optional] - An id for the label and the select, use if you want clicking the label to activate the select',\n  options: '[Required] - Array of objects that contain the values and text for the options, with an optional selected key, { id: number, value: string }',\n  required: '[Optional] - Field is required and asterisk is added to label',\n  onSelect: '[Optional] - Function that returns the name of the Select and the value that was selected',\n  selected: '[Optional] - String that pre-selects an option',\n};\n\nconst selectScope = {\n  React,\n  ReactDOM,\n  Select,\n};\n\nconst selectOpts = [\n  { id: 0, value: '--' },\n  { id: 1, value: 'Option One' },\n  { id: 2, value: 'Option Two' },\n  { id: 3, value: 'Option Three' },\n  { id: 4, value: 'Option Four' },\n];\n\nconst textareaExample = require('raw-loader!./examples/Textarea.example.txt');\n\nconst textareaDocs  = {\n  abbrMaxCharacters:  '[Optional] - Abbreviated max character count - only the count is displayed',\n  explanationMessage: '[Optional] - Explanation message to help user',\n  initialValue:       '[Optional] - Any initial value for the textarea',\n  label:              '[Optional] - A label for the textarea',\n  maxCharacters:      '[Optional] - Set a maximum character limit in order to display character count',\n  name:               '[Optional] - An id for the label and the textarea, use if you want clicking the label to activate the textarea',\n  onChange:           '[Optional] - A callback function that is executed when the textarea value changes',\n  placeholder:        '[Optional] - Any placeholder text you want in the textarea',\n  required:           '[Optional] - Field is required and asterisk is added to label',\n  validationMessage:  '[Optional] - Validation message for errors',\n};\nconst textareaScope = {\n  React,\n  ReactDOM,\n  Textarea,\n};\n\nconst messageBoxExample = require('raw-loader!./examples/MessageBox.example.txt');\n\nconst messageBoxDocs  = {\n  label:         '[Optional] - A label for the textarea',\n  name:          '[Optional] - An id for the label and the textarea, use if you want clicking the label to activate the Message Box',\n  placeholder:   '[Optional] - Any placeholder text you want in the textarea',\n  initialValue:  '[Optional] - Any initial value for the textarea',\n  maxHeight:     '[Optional] - Controls the max-height (default: 20rem)',\n  required:      '[Optional] - Field is required and asterisk is added to label',\n};\nconst messageBoxScope = {\n  React,\n  ReactDOM,\n  MessageBox,\n};\n\nconst checkboxExample = require('raw-loader!./examples/Checkbox.example.txt');\n\nconst checkboxDocs  = {\n  inline:    '[Optional] - Inline the checkboxes',\n  isChecked: '[Optional] - Set initial checked state',\n  name:      '[Required] - An id, and label for the checkbox',\n  onClick:   '[Optional] - A function you want to trigger when the checkbox is toggled',\n};\nconst checkboxScope = {\n  React,\n  ReactDOM,\n  Checkbox,\n};\n\nconst radioExample = require('raw-loader!./examples/Radio.example.txt');\n\nconst radioDocs  = {\n  inline:        '[Optional] - Inline the radios',\n  name:          '[Optional] - The name, and the basis of the id for the radio',\n  onChange:      '[Optional] - A function you which to trigger when you change the selection',\n  selectedValue: '[Optional] - The radio you want selected, when used in a group',\n  value:         '[Optional] - A value for the radio',\n};\nconst radioScope = {\n  React,\n  ReactDOM,\n  RadioGroup,\n  Radio,\n};\n\nconst switchExample = require('raw-loader!./examples/RhinoSwitch.example.txt');\n\nconst switchDocs  = {\n  className: '[Optional] - Any class name you would like to add to the switch',\n  disabled:  '[Optional] - Disable the switch',\n  isChecked: '[Optional] - Set initial on/off state',\n  name:      '[Optional] - The name, and the basis of the id for the switch',\n};\n\nconst switchScope = {\n  React,\n  ReactDOM,\n  RhinoSwitch,\n};\n\nconst FormApp = () =>\n  <div>\n    <h1 className=\"site-headline\">Forms</h1>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Forms</h3>\n      <p className=\"site-text-lead\">Forms are assembled using our suite of custom form components. It is important to understand that form components have a <code>form__control</code> class for consistent appearance. Form components are also wrapped in a <code>form__group</code> class which provides vertical spacing. Finally, you may use the <code>form__section</code> class to provide vertical spacing between sections of a form.</p>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Form Example</h3>\n      <form className=\"form\">\n        <Input name=\"exampleInputEmail1\" label=\"Email Address\" placeholder=\"Email\" type=\"email\" required />\n        <Input name=\"exampleInputPassword1\" label=\"Password\" placeholder=\"Password\" type=\"password\" required />\n        <Select name=\"exampleSelect1\" label=\"Select\" options={selectOpts} required />\n        <Textarea label=\"Text Area\" name=\"exampleTextarea1\" placeholder=\"Enter some text\" required />\n        <MessageBox label=\"Message Box\" placeholder=\"Enter some text\" name=\"exampleMessageBoxarea1\" required />\n        <div className=\"form__group\">\n          <label htmlFor=\"checkboxes\" className=\"u-block\">Checkboxes</label>\n          <Checkbox inline name=\"exampleCheckbox1\">Checkbox One</Checkbox>\n          <Checkbox inline name=\"exampleCheckbox2\">Checkbox Two</Checkbox>\n          <Checkbox inline name=\"exampleCheckbox3\">Checkbox Three</Checkbox>\n        </div>\n        <RadioGroup inline name=\"exampleRadio1\" label=\"Radios\" selectedValue=\"2\">\n          <Radio value=\"1\">Radio One</Radio>\n          <Radio value=\"2\">Radio Two</Radio>\n          <Radio value=\"3\">Radio Three</Radio>\n        </RadioGroup>\n        <div className=\"form__group\">\n          <label htmlFor=\"switcher\" className=\"u-block\">Switcher</label>\n          <RhinoSwitch name=\"exampleSwitch1\" />\n        </div>\n        <div className=\"u-text-right\">\n          <Button type=\"primary\">Submit Form</Button>\n        </div>\n      </form>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Form Utilities</h3>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Inline Form</h5>\n        <p className=\"site-copy\">Wrap elements you want inlined with <code>form__inline</code> class.</p>\n        <form className=\"form\">\n          <div className=\"form__inline\">\n            <Input name=\"exampleEmail2\" label=\"Email Address\" placeholder=\"Enter email\" type=\"email\" />\n            <Input name=\"examplePassword2\" label=\"Password\" placeholder=\"Password\" type=\"password\" />\n            <Button type=\"primary\">Sign In</Button>\n          </div>\n        </form>\n      </div>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Input</h3>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Common Input</h5>\n        <Input name=\"exampleInputEmail31\" label=\"Email Address\" type=\"email\" required />\n        <Input name=\"exampleInputName31\" label=\"First Name\" placeholder=\"First Name\" type=\"text\" initialValue=\"Ian\" />\n        <Input name=\"exampleInputPassword31\" label=\"Password\" placeholder=\"Password\" type=\"password\" />\n      </div>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Input Add-On</h5>\n        <div className=\"site-copy\">\n          <p>Use the <code>addon</code> property on Inputs with add-ons. Pass the addons as renderable nodes.</p>\n        </div>\n        <Input addon=\"left\" type=\"text\" placeholder=\"Encrypted\">\n          <Icon icon=\"lock\" />\n        </Input>\n        <Input addon=\"left\" type=\"text\" placeholder=\"Search\">\n          <Icon icon=\"search\" />\n        </Input>\n        <Input addon=\"right\" type=\"text\">\n          {/* eslint no-script-url:0 */}\n          <a href=\"javascript:void(0)\">Go For It!</a>\n        </Input>\n        <Input addon=\"both\" type=\"text\" placeholder=\"Lorem ipsum dolor sit\">\n          <span>Amount $</span>\n          <span>.00</span>\n        </Input>\n      </div>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Clear Input</h5>\n        <div className=\"site-copy\">\n          <p>Use the <code>clear</code> property on Inputs to include a clear value button.</p>\n        </div>\n        <Input name=\"exampleInputText111\" label=\"Clear Input\" type=\"text\" clear />\n      </div>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Naked Input</h5>\n        <div className=\"site-copy\">\n          <p>Use the <code>naked</code> property on Inputs to strip it of background, border, height, and padding.</p>\n        </div>\n        <Input name=\"exampleInputText999\" placeholder=\"Naked Input\" type=\"text\" naked />\n      </div>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Input Playground</h3>\n      <Playground docClass={Input} propDescriptionMap={inputDocs} codeText={inputExample} scope={inputScope} noRender={false} />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Text Area</h3>\n      <Textarea label=\"Text Area\" name=\"exampleTextarea2\" placeholder=\"Enter some text\" />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Text Area Playground</h3>\n      <Playground docClass={Textarea} propDescriptionMap={textareaDocs} codeText={textareaExample} scope={textareaScope} noRender={false} />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Message Box </h3>\n      <p className=\"site-copy\">We are using a light-weight plugin, <a href=\"http://www.jacklmoore.com/autosize/\" target=\"_blank\">Jack Moore's Autosize</a>, with custom styling for the autogrow functionality.</p>\n      <MessageBox label=\"Message Box\" name=\"exampleMessageBoxarea2\" placeholder=\"Enter some text\" />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Message Box Playground</h3>\n      <Playground docClass={MessageBox} propDescriptionMap={messageBoxDocs} codeText={messageBoxExample} scope={messageBoxScope} noRender={false} />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Checkbox</h3>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Rhinobox</h5>\n        <p className=\"site-copy\">Our custom checkbox element is called <code>rhinobox</code>. By default, these are stacked.</p>\n        <Checkbox isChecked name=\"exampleCheckbox11\">Checkbox One</Checkbox>\n        <Checkbox name=\"exampleCheckbox12\">Checkbox Two</Checkbox>\n        <Checkbox name=\"exampleCheckbox13\">Checkbox Three</Checkbox>\n      </div>\n      <div>\n        <h5 className=\"site-miniheadline\">Inline Rhinobox</h5>\n        <p className=\"site-copy\">Add the <code>inline</code> modifier to create inline checkboxes.</p>\n        <Checkbox inline name=\"exampleCheckbox21\">Checkbox One</Checkbox>\n        <Checkbox inline isChecked name=\"exampleCheckbox22\">Checkbox Two</Checkbox>\n        <Checkbox inline isChecked name=\"exampleCheckbox23\">Checkbox Three</Checkbox>\n      </div>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Checkbox Playground</h3>\n      <Playground docClass={Checkbox} propDescriptionMap={checkboxDocs} codeText={checkboxExample} scope={checkboxScope} noRender={false} />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Radio</h3>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Rhinodio</h5>\n        <p className=\"site-copy\">Our custom radio element is called <code>rhinodio</code>. By default, these are stacked.</p>\n        <RadioGroup name=\"exampleRadio2\" label=\"Radios\" selectedValue=\"2\">\n          <Radio value=\"1\">Radio One</Radio>\n          <Radio value=\"2\">Radio Two</Radio>\n          <Radio value=\"3\">Radio Three</Radio>\n        </RadioGroup>\n      </div>\n      <div className=\"u-m-b-md\">\n        <h5 className=\"site-miniheadline\">Inline Rhinodio</h5>\n        <p className=\"site-copy\">Add the <code>inline</code> property to create inline radios.</p>\n        <RadioGroup inline name=\"exampleRadio3\" label=\"Radios\" selectedValue=\"2\">\n          <Radio value=\"1\">Radio One</Radio>\n          <Radio value=\"2\">Radio Two</Radio>\n          <Radio value=\"3\">Radio Three</Radio>\n        </RadioGroup>\n      </div>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Radio Playground</h3>\n      <Playground docClass={Radio} propDescriptionMap={radioDocs} codeText={radioExample} scope={radioScope} noRender={false} />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Select</h3>\n      <div>\n        <h5 className=\"site-miniheadline\">Rhinoselect</h5>\n        <p className=\"site-copy\">Our custom select element is called <strong>rhinoselect</strong>.</p>\n        <Select name=\"exampleSelect2\" label=\"Select\" options={selectOpts} />\n      </div>\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Select Playground</h3>\n      <Playground docClass={Select} propDescriptionMap={selectDocs} codeText={selectExample} scope={selectScope} noRender={false} />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Switcher</h3>\n      <h5 className=\"site-miniheadline\">Rhinoswitcher</h5>\n      <p className=\"site-copy\">Our custom switcher element is called <code>rhinoswitcher</code>. Disable the switcher using the <code>disabled</code> property.</p>\n      <RhinoSwitch name=\"rhinoswitch2\" className=\"u-m-r-sm\" isChecked />\n      <RhinoSwitch name=\"rhinoswitch3\" isChecked disabled />\n    </section>\n\n    <section className=\"site-section\">\n      <h3 className=\"site-subheadline\">Switcher Playground</h3>\n      <Playground docClass={RhinoSwitch} propDescriptionMap={switchDocs} codeText={switchExample} scope={switchScope} noRender={false} />\n    </section>\n  </div>;\n\nReactDOM.render(<FormApp />, document.getElementById('js-app'));\n\n\n\n// WEBPACK FOOTER //\n// ./src/scripts/docs/FormApp.jsx"],"sourceRoot":""}